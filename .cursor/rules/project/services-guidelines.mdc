---
description:
globs:
alwaysApply: true
---
Your goal is to write services. A service is a class that contains the business logic of the application. Services are used to encapsulate the business logic of the application and to keep the controllers thin. Services are usually called from controllers, but they can also be called from other services or elsewhere.

- If the service is used to create something, start the service name with `Create`, like `CreateGender`.
- If the service is used to update something, start the service name with `Update`, like `UpdateGender`.
- If the service is used to delete something, start the service name with `Destroy`, like `DestroyGender`.
- Always use an execute() method
- Create as many private methods as needed so the code remains clean and readable
- Use the `__construct` method to inject dependencies
- Dependencies should be private and readonly.
- If a service takes a User object as a dependency, it means it's an action done on behalf of a user. In that case, make sure to call the `logUserAction` method and add the corresponding action name in the `config/peopleos.php` file to represent the service.

[CreateMood.php](mdc:app/Services/CreateMood.php) is a good example to follow.
